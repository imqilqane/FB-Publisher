# Generated by Django 3.1.4 on 2020-12-05 17:30

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='adCopy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriprtion', models.CharField(max_length=200)),
                ('link', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='picturs')),
                ('number_of_grouos_posted_in', models.IntegerField(default=0)),
                ('used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='adminCopywrits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('copy', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='copyWriting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('str_nich', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Docs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', ckeditor.fields.RichTextField()),
                ('video', embed_video.fields.EmbedVideoField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='fbAccountsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=20)),
                ('fullname', models.CharField(max_length=60)),
                ('dateOfCreating', models.CharField(blank=True, max_length=100, null=True)),
                ('accountStatus', models.CharField(default='active', max_length=12)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='myGroupsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(blank=True, max_length=200, null=True)),
                ('group_nich', models.CharField(blank=True, max_length=200, null=True)),
                ('group_link', models.CharField(blank=True, max_length=300, null=True)),
                ('posting_with_permestion', models.BooleanField(default=True)),
                ('approved', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('date_of_request', models.DateTimeField(default=django.utils.timezone.now)),
                ('favorated', models.BooleanField(default=False)),
                ('privite_group', models.BooleanField(default=False)),
                ('facebook_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='facebook.fbaccountsmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-favorated',),
            },
        ),
        migrations.CreateModel(
            name='testingPostsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adCopy', models.CharField(max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='settingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_price', models.FloatField(default=12.49)),
                ('six_mounths_price', models.FloatField(default=64.94)),
                ('yearly_price', models.FloatField(default=124.88)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='postedAdCompaigns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.BooleanField(default=False)),
                ('post_link', models.CharField(blank=True, max_length=200, null=True)),
                ('likes', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('posted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('done', models.BooleanField(default=False)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('adcopy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facebook.adcopy')),
                ('fb_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='facebook.fbaccountsmodel')),
                ('posting_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facebook.mygroupsmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-posted_at',),
            },
        ),
        migrations.CreateModel(
            name='nichesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niche', models.CharField(max_length=100)),
                ('skipQuestions', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='linkToRemplace_to_toRemlaceWith',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_remplace', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='facebook.copywriting')),
                ('to_remplace_with', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='facebook.postedadcompaigns')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='imageGalery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='', upload_to='picturs')),
                ('str_nich', models.CharField(blank=True, max_length=100, null=True)),
                ('nich', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='facebook.nichesmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='copywriting',
            name='nich',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='facebook.nichesmodel'),
        ),
        migrations.AddField(
            model_name='copywriting',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='adcopy',
            name='niche',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='facebook.nichesmodel'),
        ),
        migrations.AddField(
            model_name='adcopy',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
